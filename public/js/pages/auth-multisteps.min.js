"use strict";document.addEventListener("DOMContentLoaded",function(e){(function(){const e=document.querySelector("#multiStepsValidation");if(void 0!==typeof e&&null!==e){const t=e.querySelector("#multiStepsForm"),a=t.querySelector("#accountDetailsValidation"),n=t.querySelector("#personalInfoValidation"),s=t.querySelector("#tosLinksValidation"),o=[].slice.call(t.querySelectorAll(".btn-next")),r=[].slice.call(t.querySelectorAll(".btn-prev")),i=document.querySelector(".multi-steps-mobile");i&&new Cleave(i,{phone:!0,phoneRegionCode:"ID"});let l=new Stepper(e,{linear:!0});const m=FormValidation.formValidation(a,{fields:{username:{validators:{notEmpty:{message:"Please enter username"},stringLength:{min:6,max:25,message:"The username must be more than 6 and less than 25 characters long"},regexp:{regexp:/^[a-zA-Z0-9]+$/,message:"The username can only consist of alphabetical and number"}}},email:{validators:{notEmpty:{message:"Please enter email address"},emailAddress:{message:"The value is not a valid email address"}}},password:{validators:{notEmpty:{message:"Please enter password"},stringLength:{min:8,max:20,message:"The password must be more than 8 and less than 20 characters long"}}},password_confirmation:{validators:{notEmpty:{message:"Confirm Password is required"},identical:{compare:function(){return a.querySelector('[name="password"]').value},message:"The password and its confirm are not the same"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".col-sm-6"}),autoFocus:new FormValidation.plugins.AutoFocus,submitButton:new FormValidation.plugins.SubmitButton},init:e=>{e.on("plugins.message.placed",function(e){e.element.parentElement.classList.contains("input-group")&&e.element.parentElement.insertAdjacentElement("afterend",e.messageElement)})}}).on("core.form.valid",function(){l.next()}),d=FormValidation.formValidation(n,{fields:{first_name:{validators:{notEmpty:{message:"Please enter first name"},stringLength:{min:2,max:25,message:"The first name must be more than 2 and less than 25 characters long"}}},last_name:{validators:{notEmpty:{message:"Please enter last name"},stringLength:{min:2,max:25,message:"The first name must be more than 2 and less than 25 characters long"}}},whatsapp_number:{validators:{notEmpty:{message:"Please enter mobile number"}}},telkom_batch:{validators:{notEmpty:{message:"Please enter telkom batch"},stringLength:{min:4,max:5,message:"The telkom batch must be more than 4 and less than 5 characters long"},regex:{pattern:/^(19|20)\d{2}$/,message:"The telkom batch must be a valid year (e.g., 1999, 2024)"}}},address:{validators:{notEmpty:{message:"Please enter your address"},stringLength:{min:2,max:255,message:"The address must be more than 2 and less than 255 characters long"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:function(e,t){switch(e){case"address":return".col-md-12";default:return".col-sm-6"}}}),autoFocus:new FormValidation.plugins.AutoFocus,submitButton:new FormValidation.plugins.SubmitButton}}).on("core.form.valid",function(){l.next()}),u=FormValidation.formValidation(s,{fields:{agreement:{validators:{notEmpty:{message:"You must agree to the terms and conditions"}}},privacy_policy:{validators:{notEmpty:{message:"You must agree to the privacy policy"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".col-12"}),autoFocus:new FormValidation.plugins.AutoFocus,submitButton:new FormValidation.plugins.SubmitButton},init:e=>{e.on("plugins.message.placed",function(e){e.element.parentElement.classList.contains("input-group")&&e.element.parentElement.insertAdjacentElement("afterend",e.messageElement)})}}).on("core.form.valid",function(){t.submit()});o.forEach(e=>{e.addEventListener("click",e=>{switch(l._currentIndex){case 0:m.validate();break;case 1:d.validate();break;case 2:u.validate()}})}),r.forEach(e=>{e.addEventListener("click",e=>{switch(l._currentIndex){case 2:case 1:l.previous()}})})}})()});